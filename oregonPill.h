/*****************************************************************************
* Model: oregonPill.qm
* File:  ./oregonPill.h
*
* This code has been generated by QM tool (see state-machine.com/qm).
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*****************************************************************************/
/*${.::oregonPill.h} .......................................................*/
#ifndef oregonPill_h
#define oregonPill_h
#ifdef __cplusplus
extern "C" {
#endif
#include "qhsm.h"    /* include own framework tagunil version */
#include "eventHandlers.h"
(do not delete this caption):
#import <stdbool.h>
#import "OregonPill.h"
#import "EventHadlers.h"
#DEFINE TIMEOUT_RADX_S 900
#DEFINE TIMEOUT_HEAL_S 300

typedef struct oregonPillQEvt {
    QEvt super;
} oregonPillQEvt;

enum PlayerSignals {
TICK_SEC_SIG = Q_USER_SIG,

PILL_ANY_SIG,
1]_SIG,
PILL_HEAL_SIG,
PILL_HEALSTATION_SIG,
PILL_BLESS_SIG,
PILL_CURSE_SIG,
TIME_TICK_1S_SIG,
PILL_ANTIRAD_SIG,
PILL_REMOVED_SIG,
PILL_RAD_X_SIG,
PILL_RESET_SIG,
PILL_GHOUL_SIG,

LAST_USER_SIG
};
extern QHsm * const the_oregonPill; /* opaque pointer to the oregonPill HSM */

/*${SMs::OregonPill_ctor} ..................................................*/
void OregonPill_ctor(
    (do not delete this caption):,
    unsigned int HP,
    unsigned int State);

#ifdef __cplusplus
}
#endif
#endif /* oregonPill_h */
